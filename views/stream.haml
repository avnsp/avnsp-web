%script{type: 'text/javascript', src: "/js/jquery-2.0.3.min.js"}
%script{src: '/js/mqttws31.js', type: "text/javascript"}
%script{src: '/js/highcharts.js', type: "text/javascript"}
%script{src: '/js/highcharts.light.js', type: "text/javascript"}
#container

:javascript
  // called when the client connects
  function onConnect() {
    // Once a connection has been made, make a subscription and send a message.
    console.log("onConnect");
    client.subscribe("mqtt-bridge/#{@party.id}");
  }

  // called when the client loses its connection
  function onConnectionLost(responseObject) {
    if (responseObject.errorCode !== 0) {
      console.log("onConnectionLost:", responseObject.errorMessage);
      setTimeout(function() { client.connect() }, 5000);
    }
  }

  // called when a message arrives
  function onMessageArrived(message) {
    var purchases = JSON.parse(message.payloadString);
    var chart = $('#container').highcharts();
    chart.get('Ã–l');
    for(var i = 0; i < purchases.length; i++) {
      var ps = purchases[i]
      var s = chart.get(ps.name);
      s.setData(ps.data);
    }
  }

  // Create a client instance
  var client = new Paho.MQTT.Client('m21.cloudmqtt.com', 33848, "avnsp-#{@party.id}");

  // set callback handlers
  client.onConnectionLost = onConnectionLost;
  client.onMessageArrived = onMessageArrived;

  // connect the client
  client.connect({
    useSSL: true,
    userName: "#{@username}",
    password: "#{@password}",
    onSuccess: onConnect,
  });
  $(function () {
    var chart = $('#container').highcharts({
        chart: {
            type: 'column',
            height: 800,
        },
        title: {
          text: '#{@party.name}',
        },
        xAxis: {
          categories: #{@attendances.to_json},
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Antal'
            },
        },
        plotOptions: {
            column: {
                stacking: 'normal',
            }
        },
        series: #{@purchases.to_json}
    });

  });
